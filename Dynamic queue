#include <stdio.h>
#include <stdlib.h>

struct node {
    int info;
    struct node* next;
}*front = NULL, *rear = NULL;

struct node* create() {
    struct node* z = (struct node*)malloc(sizeof(struct node));
    return z;
}

void isempty() {
    if (front == NULL)
        printf("\nQueue is Empty..");
    else
        printf("\nQueue is NOT empty..");
}

void insert(int x) {
    struct node* p = create();
    p->info = x;
    p->next = NULL;
    if (rear == NULL)
        front = rear = p;
    else {
        rear->next = p;
        rear = p;
    }
    printf("\nElement is Inserted...");
}

int remove_element() {
    if (front == NULL) {
        printf("\nQueue is empty..");
        return -1;
    } else {
        int x = front->info;
        struct node* temp = front;
        front = front->next;
        if (front == NULL)
            rear = NULL;
        free(temp);
        return x;
    }
}

void display() {
    struct node* p = front;
    while (p != NULL) {
        printf("\n%d", p->info);
        p = p->next;
    }
}

int main() {
    int ch, x, z;
    do {
        printf("\nEnter your choice=");
        printf("\n1:Isempty\n2:Insert\n3:Remove\n4:Display\n5:Exit ");
        scanf("%d", &ch);
        switch (ch) {
        case 1:
            isempty();
            break;
        case 2:
            printf("\nEnter any element=");
            scanf("%d", &x);
            insert(x);
            break;
        case 3:
            z = remove_element();
            if (z != -1)
                printf("\nRemoved Value=%d", z);
            break;
        case 4:
            display();
            break;
        case 5:
            exit(1);
        }
    } while (ch != 5);
    return 0;
}
